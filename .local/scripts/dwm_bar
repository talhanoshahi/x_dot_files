#!/bin/env sh

# INIT
printf "$$" > ~/.cache/pidofbar
sec=0

update_memory () { 
	memory="$(free -h | sed -n "2s/\([^ ]* *\)\{2\}\([^ ]*\).*/\2/p")"
}

update_time () { 
	time="$(date "+[  %a %d %b ] [  %I:%M %P ]")" 
}

update_bat () { 
	# you might need to change the path depending on your device
	bat_status=$(cat /sys/class/power_supply/BAT0/status)
	bat_capacity=$(cat /sys/class/power_supply/BAT0/capacity)
	if [ "$bat_status" = "Charging" ]; then
		bat_status="Charging"
	elif [ "$bat_capacity" -gt 80 ]; then
		bat_status=""
	elif [ "$bat_capacity" -gt 60 ]; then
		bat_status=""
	elif [ "$bat_capacity" -gt 40 ]; then
		bat_status=""
	elif [ "$bat_capacity" -gt 20 ]; then
		bat_status=""
	else 
		bat_status=""
	fi
	bat="$bat_status $bat_capacity%"
}

update_vol () { 
	# vol="$([ "$(pamixer --get-mute)" = "false" ] && printf ' ' || printf ' ')$(pamixer --get-volume)%"
	vol="$([ "$(pactl list sinks | grep Mute | sed 's/.*Mute: \.*//')" = "no" ] && printf ' ' || printf ' ')$(pactl list sinks | grep Volume | grep "[0-9]*%" | sed -e "s,.* \([0-9][0-9]*\)%.*,\1," | head -n 1)%"
}

# We have to run this only once.
update_vol

display () { 
	xsetroot -name "[  $memory ] [ $bat ] [ $vol ] $time"
}

# Handling receiving signal
# RTMIN = 34 (always)
trap	"update_vol;display"	"RTMIN"

## kill -m "$(cat ~/.cache/pidofbar)"
# where m = 34 + n

while true
do
	sleep 1 &
  wait && { 
		# to update item ever n seconds with a offset of m
		## [ $((sec % n)) -eq m ] && udpate_item
		[ $((sec % 5 )) -eq 0 ] && update_time
		[ $((sec % 15)) -eq 0 ] && update_memory
		[ $((sec % 5)) -eq 0 ] && update_bat

		# how often the display updates ( 5 seconds )
		[ $((sec % 5 )) -eq 0 ] && display
		sec=$((sec + 1))
	}
done 
